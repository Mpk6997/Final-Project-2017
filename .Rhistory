mutate(website = paste0('[link](',original.frame$website, ')'), twitter = paste0('[link](','twitter.com/',original.frame$twitter_id,')'))
View(reps)
View(reps)
response <- GET("https://congress.api.sunlightfoundation.com//legislators/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
original.frame <- parsed.data$results
reps <- parsed.data$results %>%
select(first_name, last_name, title, party, chamber, phone) %>%
mutate(website = paste0('[link](',original.frame$website, ')'), twitter = paste0('[link](','twitter.com/',original.frame$twitter_id,')'))
columns <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
reps.table <- kable(reps, col.names = columns)
response <- GET("https://congress.api.sunlightfoundation.com//legislators/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
original.frame <- parsed.data$results
reps <- parsed.data$results %>%
select(first_name, last_name, title, party, chamber, phone) %>%
mutate(website = paste0('[link](',original.frame$website, ')'), twitter = paste0('[link](','https://twitter.com/',original.frame$twitter_id,')'))
columns <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
reps.table <- kable(reps, col.names = columns)
View(reps)
View(reps)
library('httr')
library('jsonlite')
library('dplyr')
library('knitr')
zip.code <- '98105'
response <- GET("https://congress.api.sunlightfoundation.com/districts/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
district <- parsed.data$results
response <- GET("https://congress.api.sunlightfoundation.com//legislators/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
original.frame <- parsed.data$results
reps <- parsed.data$results %>%
select(first_name, last_name, title, party, chamber, phone) %>%
mutate(website = paste0('[link](',original.frame$website, ')'), twitter = paste0('[link](','https://twitter.com/',original.frame$twitter_id,')'))
columns <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
reps.table <- kable(reps, col.names = columns)
View(original.frame)
View(original.frame)
View(original.frame)
View(original.frame)
View(reps)
View(reps)
committeeExtract <- function(member.id){
response <- GET(paste0("https://congress.api.sunlightfoundation.com/committees/?member_ids=", member.id))
body <- content(response, "text")
parsed.data <- fromJSON(body)
return(committee.frame <- parsed.data$results)
}
x <- committeeExtract(J000298)
x <- committeeExtract('J000298')
View(x)
View(x)
x <- original.frame$bioguide_id
list.id <- original.frame$bioguide_id
bind_cols(lapply(list.id, committeeExtract))
x <- bind_cols(lapply(list.id, committeeExtract))
x <- lapply(list.id, committeeExtract)
x <- bind_rows(lapply(list.id, committeeExtract))
View(x)
View(x)
View(x)
View(x)
View(x)
View(x)
committeeExtract <- function(member.id){
response <- GET(paste0("https://congress.api.sunlightfoundation.com/committees/?member_ids=", member.id))
body <- content(response, "text")
parsed.data <- fromJSON(body)
committee.frame <- parsed.data$results %>% mutate(bioguide_id = member.id)
return(committee.frame)
}
list.id <- original.frame$bioguide_id
x <- bind_rows(lapply(list.id, committeeExtract))
View(x)
View(x)
committee.frame <- bind_rows(lapply(list.id, committeeExtract))
View(committee.frame)
View(committee.frame)
full.frame <- full_join(committee.frame, reps, by = bioguide_id)
full.frame <- full_join(committee.frame, reps, by = 'bioguide_id')
committee.frame <- bind_rows(lapply(list.id, committeeExtract))
full.frame <- full_join(committee.frame, reps, by = 'bioguide_id')
full.frame <- full_join(committee.frame, reps, by = 'committee_id')
View(committee.frame)
View(committee.frame)
full.frame <- full_join(committee.frame, reps, by = 'bioguide_id')
committeeExtract <- function(member.id){
response <- GET(paste0("https://congress.api.sunlightfoundation.com/committees/?member_ids=", member.id))
body <- content(response, "text")
parsed.data <- fromJSON(body)
committee.frame <- parsed.data$results %>% mutate(bioguide_id = member.id)
return(committee.frame)
}
list.id <- original.frame$bioguide_id
committee.frame <- bind_rows(lapply(list.id, committeeExtract))
full.frame <- full_join(committee.frame, reps, by = 'bioguide_id')
View(reps)
View(reps)
full.frame <- full_join(committee.frame, original.frame, by = 'bioguide_id')
View(full.frame)
View(full.frame)
response <- GET("https://congress.api.sunlightfoundation.com//legislators/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
members.frame <- parsed.data$results
reps <- parsed.data$results %>%
select(first_name, last_name, title, party, chamber, phone) %>%
mutate(website = paste0('[link](',original.frame$website, ')'), twitter = paste0('[link](','https://twitter.com/',original.frame$twitter_id,')'))
response <- GET("https://congress.api.sunlightfoundation.com//legislators/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
members.frame <- parsed.data$results
reps <- parsed.data$results %>%
select(first_name, last_name, title, party, chamber, phone) %>%
mutate(website = paste0('[link](',original.frame$website, ')'), twitter = paste0('[link](','https://twitter.com/',original.frame$twitter_id,')'))
response <- GET("https://congress.api.sunlightfoundation.com//legislators/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
members.frame <- parsed.data$results
reps <- parsed.data$results %>%
select(first_name, last_name, title, party, chamber, phone) %>%
mutate(website = paste0('[link](',members.frame$website, ')'), twitter = paste0('[link](','https://twitter.com/',members.frame$twitter_id,')'))
columns <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
reps.table <- kable(reps, col.names = columns)
committeeExtract <- function(member.id){
response <- GET(paste0("https://congress.api.sunlightfoundation.com/committees/?member_ids=", member.id))
body <- content(response, "text")
parsed.data <- fromJSON(body)
committee.frame <- parsed.data$results %>% mutate(bioguide_id = member.id)
return(committee.frame)
}
list.id <- original.frame$bioguide_id
committeeExtract <- function(member.id){
response <- GET(paste0("https://congress.api.sunlightfoundation.com/committees/?member_ids=", member.id))
body <- content(response, "text")
parsed.data <- fromJSON(body)
committee.frame <- parsed.data$results %>% mutate(bioguide_id = member.id)
return(committee.frame)
}
list.id <- members.frame$bioguide_id
committee.frame <- bind_rows(lapply(list.id, committeeExtract))
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id')
View(members.frame)
View(members.frame)
View(full.frame)
View(full.frame)
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id)
View(full.frame)
View(full.frame)
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id) %>%
mutate(committee_count = count(bioguide_id))
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id')  %>%
mutate(committee_count = count(bioguide_id))
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id')  %>%
mutate(committee_count = count(bioguide_id))
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id')  %>%
mutate(committee_count = count(bioguide_id))
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id')
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id)
View(full.frame)
View(full.frame)
committee.chart <- barplot(full.frame,horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
count(full.frame, bioguide_id)
x <- count(full.frame, bioguide_id)
View(x)
View(x)
to.plot <- count(full.frame, bioguide_id) %>% mutate(name = full.frame$first_name)
View(x)
View(x)
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id) %>%
count(bioguide_id)
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id)
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id) %>%
mutate(num = count(bioguide_id)$n)
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id) %>%
mutate(num = count(full.frame, bioguide_id)$n)
list.num <- count(full.frame, bioguide_id)$n
mutate(full.frame, num = list.num)
num.frame <- count(full.frame, bioguide_id)
View(num.frame)
View(num.frame)
committee.chart <- barplot(full.frame$first_name, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
committee.chart <- barplot(num.frame$n, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
View(num.frame)
View(num.frame)
View(full.frame)
View(full.frame)
View(x)
View(x)
View(reps)
View(committee.frame)
View(committee.frame)
View(members.frame)
View(members.frame)
View(x)
View(x)
knitr::opts_chunk$set(include = FALSE)
mutate(full.frame, num = list.num)
mutate(full.frame, num = list.num)
library('httr')
library('jsonlite')
library('dplyr')
library('knitr')
mutate(full.frame, num = list.num)
View(committee.frame)
View(committee.frame)
View(members.frame)
View(members.frame)
View(num.frame)
View(num.frame)
View(num.frame)
View(num.frame)
library('httr')
library('jsonlite')
library('dplyr')
library('knitr')
zip.code <- '98105'
response <- GET("https://congress.api.sunlightfoundation.com/districts/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
district <- parsed.data$results
response <- GET("https://congress.api.sunlightfoundation.com//legislators/locate?zip=98105")
body <- content(response, "text")
parsed.data <- fromJSON(body)
members.frame <- parsed.data$results
reps <- parsed.data$results %>%
select(first_name, last_name, title, party, chamber, phone) %>%
mutate(website = paste0('[link](',members.frame$website, ')'), twitter = paste0('[link](','https://twitter.com/',members.frame$twitter_id,')'))
columns <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
reps.table <- kable(reps, col.names = columns)
committeeExtract <- function(member.id){
response <- GET(paste0("https://congress.api.sunlightfoundation.com/committees/?member_ids=", member.id))
body <- content(response, "text")
parsed.data <- fromJSON(body)
committee.frame <- parsed.data$results %>% mutate(bioguide_id = member.id)
return(committee.frame)
}
list.id <- members.frame$bioguide_id
committee.frame <- bind_rows(lapply(list.id, committeeExtract))
full.frame <- full_join(committee.frame, members.frame, by = 'bioguide_id') %>% group_by(bioguide_id)
num.frame <- count(full.frame, bioguide_id)
# mutate(full.frame, num = list.num)
#committee.chart <- barplot(num.frame$n, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
View(num.frame)
View(committee.frame)
View(committee.frame)
View(reps)
View(reps)
View(members.frame)
View(members.frame)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id')
View(to.graph)
View(to.graph)
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n, first_name, last_name)
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n) %>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name)
# mutate(full.frame, num = list.num)
#committee.chart <- barplot(num.frame$n, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n) %>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name)
# mutate(full.frame, num = list.num)
#committee.chart <- barplot(num.frame$n, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n)
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n)%>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name)
# mutate(full.frame, num = list.num)
#committee.chart <- barplot(num.frame$n, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
View(to.graph)
View(to.graph)
mutate(to.graph, full_name = paste(members.frame$first_name, members.frame$last_name)
# mutate(full.frame, num = list.num)
#committee.chart <- barplot(num.frame$n, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
View(to.graph)
View(to.graph)
mutate(to.graph, full_name = 'paste(members.frame$first_name, members.frame$last_na')
mutate(to.graph, full_name = paste(members.frame$first_name, members.frame$last_name))
mutate(to.graph, full_name = paste(members.frame$first_name, members.frame$last_name))
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n) %>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name))
View(to.graph)
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = full.frame$first_name, main = 'Committees Served on by Each Rep.')
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph%full_name, main = 'Committees Served on by Each Rep.')
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.')
View(committee.chart)
View(committee.chart)
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.')
View(committee.chart)
x <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.')
View(x)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n) %>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name)) %>% arrange(desc(n))
View(to.graph)
View(to.graph)
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.')
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n) %>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name)) %>% arrange(asc(n))
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n) %>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name)) %>% arrange(n)
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.')
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees)
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees)
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees')
committee.chart <- barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees', las = 1)
View(committee.chart)
View(committee.chart)
barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees', las = 1)
barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees', las = 1)
barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees', las = 1)
View(num.frame)
View(num.frame)
View(to.graph)
View(to.graph)
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n) %>%
mutate(full_name = paste(members.frame$first_name, members.frame$last_name))
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id')
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n, bioguide_id)
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n, bioguide_id, first_name, last_name)
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n, bioguide_id, first_name, last_name)%>%   mutate(full_name = paste(members.frame$first_name, members.frame$last_name))
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n, bioguide_id, first_name, last_name)%>%   mutate(full_name = paste(to.graph$first_name, to.graph$last_name))
View(to.graph)
View(to.graph)
to.graph <- full_join(num.frame, members.frame, by = 'bioguide_id') %>% select(n, bioguide_id, first_name, last_name)%>%   mutate(full_name = paste(to.graph$first_name, to.graph$last_name)) %>% arrange(n)
View(to.graph)
View(to.graph)
barplot(to.graph$n, horiz = TRUE, names.arg = to.graph$full_name, main = 'Committees Served on by Each Rep.', xlab = '# Committees', las = 1)
library(twitter)
install.packages(twitter)
install.packages(twitteR)
install.packages("twitteR")
library(twitteR)
source('~/Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017/test.r', echo=TRUE)
library('tm')
feelings <- countedwords %>%
right_join(get_sentiments("nrc")) %>%
filter(!is.na(n)) %>%
filter(!is.na(sentiment)) %>%
count(sentiment, sort = TRUE)
library(tidytext)
library(reshape2)
library(wordcloud)
library(dplyr)
library(plotly)
library(tidytext)
library(reshape2)
library(wordcloud)
library(dplyr)
library(plotly)
getTrendsWC <- function(woeid) {
trend <- getTrends(woeid)
return (trend$name)
}
getTweetsFromSearch <- function(my.search, n.results) {
response <- searchTwitter(my.search, n = n.results, lang = 'en', retryOnRateLimit = 120)
tweets <- twListToDF(response)
return (cleanTweets(tweets, my.search))
}
getTweetsFromUser <- function(my.user, n.results) {
response <- userTimeline(my.user, n=n.results)
tweets <- twListToDF(response)
return (cleanTweets(tweets, my.user))
}
cleanTweets <- function(tweets, my.search) {
tweets$text <- gsub(" ?(f|ht)(tp)(s?)(://)(.*)[.|/](.*)", "", tweets$text)
tidy_tweets <- tweets %>% unnest_tokens(word, text)
# add twitter stop words
word <- c('rt', 'amp', 't.co', 'https')
# add all search words to stop words
search.words <- strsplit(my.search, " ")
for (w in search.words)
word <- c(word, w)
new_stops <- data_frame(word, "CUSTOM")
# remove stop words
all_stop_words <- stop_words %>% bind_rows(new_stops)
cleaned_tweets <- tidy_tweets %>% anti_join(all_stop_words)
return (cleaned_tweets)
}
getSentimentCloud <- function (tweets) {
# sentiment wordcloud
tweets %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 200)
}
getWordCloud <- function (tweets) {
# count each word
countedwords <- tweets %>% count(word, sort = TRUE)
# regular wordcloud
wordcloud(words = countedwords$word, freq = countedwords$n, min.freq = 2,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
}
getFeeling <- function (tweets) {
countedwords <- tweets %>% count(word, sort = TRUE)
feelings <- countedwords %>%
right_join(get_sentiments("nrc")) %>%
filter(!is.na(n)) %>%
filter(!is.na(sentiment)) %>%
count(sentiment, sort = TRUE)
plot_ly(
x = feelings$sentiment,
y = feelings$nn,
name = "Feeling",
type = "bar"
) %>%
layout(yaxis = list(showticklabels = FALSE), xaxis = list(title = 'Emotion'))
}
shiny::runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
getTrends(2351598)
getTrends(2352491)
getTrends(2352824)
getTrends(2351598)
getTrends(1)
x <- getTrends(1) %>% twListToDF()
x <- getTrends(1)
View(x)
View(x)
getTrends(2398401)
shiny::runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
View(members.frame)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
library(twitteR)
library(shiny)
library(dplyr)
library(plotly)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
library(shiny)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
shiny::runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
library(tidytext)
library(reshape2)
library(wordcloud)
library(dplyr)
library(plotly)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
source("./scripts/plot.r")
setwd("~/Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017")
source("./scripts/plot.r")
runApp()
library(shiny)
library(twitteR)
source("./scripts/twitterauth.r")
source("./scripts/wordcloud.r")
source("./scripts/location.r")
df <- read.csv(".data/top_accounts.csv")
df <- read.csv(".data/topAccounts.csv")
df <- read.csv(".Data/topAccounts.csv")
df <- read.csv("Data/topAccounts.csv")
View(df)
View(df)
p <- plot_ly(data = df, x = ~followers, y = ~tweets)
p
source("./scripts/plot.r")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- read.csv("Data/topAccounts.csv")
View(df)
View(df)
library(dplyr)
df <- read.csv("Data/topAccounts.csv") %>% arrange(following)
View(df)
View(df)
df <- read.csv("Data/topAccounts.csv")
View(df)
View(df)
runApp()
runApp()
runApp()
diamonds
runApp()
runApp()
runApp()
