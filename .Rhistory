install.packages("plotly")
library("plotly")
```{r setup, include=FALSE}
---
title: "index"
output: html_document
---
```{r setup, include=FALSE}
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="choropleth/ag")
chart_link
```
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
chart_link = plotly_POST(p, filename="choropleth/ag")
chart_link = api_create(p, filename="choropleth/ag")
chart_link = plotly_POST(p, filename="choropleth/ag")
help(signup, package = 'plotly')
singup("Mpk6997", "Mpk6997@gmail.com", save = TRUE)
signup("Mpk6997", "Mpk6997@gmail.com", save = TRUE)
signup("Mpk6997", "Mpk6997@gmail.com", save = FALSE)
signup("Mpk6997", "Mpk6997@gmail.com"")
chart_link
signup("Mpk6997", "Mpk6997@gmail.com"")""
signup("Mpk6997", "Mpk6997@gmail.com")
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
chart_link = plotly_POST(p, filename="choropleth/ag")
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
map <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- read.csv("./data/cityWOEID")
df <- read.cs("./data/CityWOEID")
df <- read.csv("./data/CityWOEID")
df <- read.csv("./Data/CityWOEID")
df <- read.csv("./Data/CityWOEID")
df <- read.csv("./Data/CityWOEID.csv")
df <- read.csv("Data/CityWOEID.csv")
df <- read.csv("./Dat/CityWOEID.csv")
setwd("C:/Users/mpk69/Google Drive/University of Washington/Sophomore Year 2017/2017 Spring/Info 201/Final-Project-2017")
df <- read.csv("./Data/CityWOEID.csv")
df2 <- read.csv("./Data/us-cities-sample.csv")
library("dplyr", lib.loc="~/R/win-library/3.3")
View(df2)
data <- df2 %>% filter(df2$name %in% df$City) %>% select(name, state, latitude, longitude)
View(data)
View(df)
df2 <- read.csv(".Data/zip_codes_states.csv")
df2 <- read.csv("./Data/zip_codes_states.csv")
View(df2)
data <- df2 %>% filter(df2$city %in% df$City) %>% select(city, state, latitude, longitude)
View(data)
View(df)
View(data)
data <- unique(data)
data <- unique(data$city)
data <- df2 %>% filter(df2$city %in% df$City) %>% select(city, state, latitude, longitude)
parsed <- df2 %>% filter(df2$city %in% df$City) %>% select(city, state, latitude, longitude)
data <- df2 %>% filter(df$city %in% df2$City) %>% select(city, state, latitude, longitude)
data <- df2 %>% filter(df2$city %in% df$City) %>% select(city, state, latitude, longitude) %>% group_by(city) %>% filter(row_number() == 1)
View(data)
View(df)
View(data)
data <- df2 %>% filter(df2$city %in% df$City) %>% select(city, state, latitude, longitude) %>% group_by(city) %>% filter(row_number() == 1) %>% select(city, latitude, longitude)
df <- df %>% filter(df$City %in% df2$city)
parsed <- data %>% left_join(df, by = city)
df <- df %>% mutate(city = df$City)
inst#all.packages("HSAUR")
df <- read.csv("./Data/CityWOEID.csv")
df <- df %>% filter(df$city %in% df2City)
df <- df %>% filter(df$city %in% df2city)
df <- df %>% filter(df$city %in% df2$city)
parsed <- data %>% left_join(df, by = city)
parsed <- merge(data, df)
View(parsed)
parsed <- parsed %>% distinct(latitude & longitude)
parsed <- merge(data, df)
parsed <- parsed %>% group_by(.dots=c("latitude", "longitude") %>% filter(row_number() == 1)
)
parsed <- parsed %>% group_by(.dots=c("latitude", "longitude")) %>% filter(row_number() == 1)
parsed <- parsed %>% group_by(latitude, longitude) %>% filter(row_number() == 1)
View(data)
View(parsed)
getwd()
write.csv(parsed, file = "city_data.csv")
source("./scripts/location.r")
source("./scripts/location.r")
df <- read.csv("./Dat/city_data.csv")
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
g
View(df)
source("./scripts/location.r")
g <- Top.Map(df)
g
Twitter.Auth()
library(twitteR)
library(shiny)
Twitter.Auth()
scripts
source("./scripts/twitterauth.r")
Twitter.Auth()
g <- Top.Map(df)
g
Trends <- getTrends(df$Id)
Trends <- getTrends(id = df$Id)
Trends <- getTrends(woeid = df$Id)
