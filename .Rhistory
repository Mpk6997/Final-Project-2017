all_stop_words <- stop_words %>% bind_rows(new_stops)
cleaned_tweets <- tidy_tweets %>% anti_join(all_stop_words)
return (cleaned_tweets)
}
getSentimentCloud <- function (tweets) {
# sentiment wordcloud
tweets %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 200)
}
getWordCloud <- function (tweets) {
# count each word
countedwords <- tweets %>% count(word, sort = TRUE)
# regular wordcloud
wordcloud(words = countedwords$word, freq = countedwords$n, min.freq = 2,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
}
getFeeling <- function (tweets) {
countedwords <- tweets %>% count(word, sort = TRUE)
feelings <- countedwords %>%
right_join(get_sentiments("nrc")) %>%
filter(!is.na(n)) %>%
filter(!is.na(sentiment)) %>%
count(sentiment, sort = TRUE)
plot_ly(
x = feelings$sentiment,
y = feelings$nn,
name = "Feeling",
type = "bar"
) %>%
layout(yaxis = list(showticklabels = FALSE), xaxis = list(title = 'Emotion'))
}
shiny::runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
getTrends(2351598)
getTrends(2352491)
getTrends(2352824)
getTrends(2351598)
getTrends(1)
x <- getTrends(1) %>% twListToDF()
x <- getTrends(1)
View(x)
View(x)
getTrends(2398401)
shiny::runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
View(members.frame)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
library(twitteR)
library(shiny)
library(dplyr)
library(plotly)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
library(shiny)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
shiny::runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
library(tidytext)
library(reshape2)
library(wordcloud)
library(dplyr)
library(plotly)
runApp('Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017')
source("./scripts/plot.r")
setwd("~/Desktop/UW Sophomore/Spring Quarter/INFO 201/Final-Project-2017")
source("./scripts/plot.r")
runApp()
library(shiny)
library(twitteR)
source("./scripts/twitterauth.r")
source("./scripts/wordcloud.r")
source("./scripts/location.r")
df <- read.csv(".data/top_accounts.csv")
df <- read.csv(".data/topAccounts.csv")
df <- read.csv(".Data/topAccounts.csv")
df <- read.csv("Data/topAccounts.csv")
View(df)
View(df)
p <- plot_ly(data = df, x = ~followers, y = ~tweets)
p
source("./scripts/plot.r")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- read.csv("Data/topAccounts.csv")
View(df)
View(df)
library(dplyr)
df <- read.csv("Data/topAccounts.csv") %>% arrange(following)
View(df)
View(df)
df <- read.csv("Data/topAccounts.csv")
View(df)
View(df)
runApp()
runApp()
runApp()
diamonds
runApp()
runApp()
runApp()
=======
install.packages("plotly")
library("plotly")
```{r setup, include=FALSE}
---
title: "index"
output: html_document
---
```{r setup, include=FALSE}
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="choropleth/ag")
chart_link
```
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
chart_link = plotly_POST(p, filename="choropleth/ag")
chart_link = api_create(p, filename="choropleth/ag")
chart_link = plotly_POST(p, filename="choropleth/ag")
help(signup, package = 'plotly')
singup("Mpk6997", "Mpk6997@gmail.com", save = TRUE)
signup("Mpk6997", "Mpk6997@gmail.com", save = TRUE)
signup("Mpk6997", "Mpk6997@gmail.com", save = FALSE)
signup("Mpk6997", "Mpk6997@gmail.com"")
chart_link
signup("Mpk6997", "Mpk6997@gmail.com"")""
signup("Mpk6997", "Mpk6997@gmail.com")
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
chart_link = plotly_POST(p, filename="choropleth/ag")
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
map <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
cities <- read.csv("./Data/cities.csv")
cities <-read.csv("./Data/cities.csv")
getpwd()
pwd()
cities <- read.csv("./Data/cities.csv")
cities <- read.csv("./Data/cities.csv")
setpwd("C:\Users\mpk69\Google Drive\University of Washington\Sophomore Year 2017\2017 Spring\Info 201\Final-Project-2017")
setpwd("C:/Users/mpk69/Google Drive/University of Washington/Sophomore Year 2017/2017 Spring/Info 201/Final-Project-2017")
getwd()
setwd("C:/Users/mpk69/Google Drive/University of Washington/Sophomore Year 2017/2017 Spring/Info 201/Final-Project-2017")
cities <- read.csv("./Data/cities.csv")
id <- read.csv("./Data/convertcsv.csv")
culled <- cities %>% filter(cities$city %in% id$city)
library("dplyr", lib.loc="~/R/win-library/3.3")
culled <- cities %>% filter(cities$city %in% id$city)
culled <- cities %>% filter(id$city %in% cities$city)
culled <- cities %>% filter(city %in% id$city)
View(id)
culled <- cities %>% filter(city %in% id$name)
View(culled)
culled2 <- id %>% filter(name %in% culled$city)
culled <- culled2 %>% filter(city %in% culled2$name)
culled <- culled %>% filter(city %in% culled2$name)
culled <- culled %>% group_by(city) %>% filter(row_number() == 1)
culled2 <- culled2 %>% group_by(name) %>% filter(row_number() == 1)
culled2 <- culled2 %>% mutate(city = name)
merged <- merge(culled, culled2)
View(merged)
merged <- merged %>% filter(placeType.name == "Town")
merged <- merged %>% mutate(City = city_ascii) %>% select(City, country, lat, lng, pop, woeid)
write.csv(merged, "city_data.csv")
df <- read.csv("./Data/city_data.csv")
Trends <- lapply(df$woeid, getTrends)
library(twitteR)
Trends <- lapply(df$woeid, getTrends)
source("./scripts/twitterauth.r")
Twitter.Auth()
Trends <- lapply(df$woeid, getTrends)
Trends <- lapply(df$woeid, head(getTrends, n = 5))
Trends <- getTrends(woeid = df$woeid)
Trends <- lapply(df$woeid, getTrends)
View(df)
View(culled)
View(culled2)
View(df)
df <- read.csv("./Data/city_data.csv")
View(df)
Trends <- getTrends(woeid = df$woeid[1])
Trends <- lapply(df$woeid, getTrends)
df <- read.csv("./Data/city_data.csv")
lapply(merged$woeid, getTrends)
View(merged)
View(culled2)
View(culled)
View(culled)
merged <- culled %>% left_join(culled2, by = "city")
View(merged)
write.csv(merged, "city_data.csv")
Trends <- lapply(merged, getTrends)
Trens <- lapply(merged$woeid, getTrends)
df <- read.csv("./Data/woeid_cities.csv")
source("./scripts/location.r")
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
>>>>>>> Commiting to pull.
View(df)
df <- read.csv("./Data/city_data.csv")
View(df)
df <- df %>% filter(country == "United States")
library("dplyr", lib.loc="~/R/win-library/3.3")
df <- df %>% filter(country == "United States")
View(df)
write.csv(df, "city_data.csv")
Twitter.Auth()
source("./scripts/twitterauth.r")
source("./scripts/wordcloud.r")
source("./scripts/location.r")
source("./scripts/plot.r")
library(shiny)
library(twitteR)
source("./scripts/twitterauth.r")
source("./scripts/wordcloud.r")
source("./scripts/location.r")
source("./scripts/plot.r")
Twitter.Auth()
install.packages("twitteR")
library(twitteR)
source("./scripts/twitterauth.r")
source("./scripts/wordcloud.r")
source("./scripts/location.r")
source("./scripts/plot.r")
Twitter.Auth()
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
g
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
g
View(cities)
View(df)
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
g
source("./scripts/location.r")
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
g
city <- read.csv("./Data/World_Cities_Location_table_MS-EXCEL.csv")
city <- read.csv("./Data/World_Cities_Location_table.csv")
View(city)
city <- read.csv("./Data/World_Cities_Location_table_MS-EXCEL.csv")
city <- city %>% filter(country == "United States")
city <- city %>% filter(city %in% cities$city)
View(city)
cities <- cities %>% filter(city %in% city$city)
merged <- merge(city, cities)
View(city)
View(merged)
View(cities)
View(city)
View(cities)
View(city)
cities <- cities %>% select(city, latitude, longitude)
View(cities)
View(city)
View(cities)
View(city)
View(df)
df <- df %>% filter(city %in% cities$city)
View(df)
View(cities)
View(city)
View(cities)
View(city)
View(cities)
View(cities)
View(city)
df <- read.csv("./Data/city_data.csv")
df <- df %>% filter(city %in% city$city)
remove(cities)
View(city)
city <- city %>% select(city, latitude, longitude)
View(df)
df <- df %>% select(city, pop, woeid)
merged <- merge(city, df)
View(merged)
write.csv(merged, "city_data.csv")
source("./scripts/location.r")
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
g
source("./scripts/location.r")
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
df <- read.csv("./Data/city_data.csv")
View(df)
source("./scripts/location.r")
df <- read.csv("./Data/city_data.csv")
g <- Top.Map(df)
g
View(df)
df <- df <- mutate(longitude = (0 - longitude))
df <- df %>% mutate(longitude = (0 - longitude))
View(df)
g <- Top.Map(df)
g
